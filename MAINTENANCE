These are notes for the maintainer.

Steps to release:

  - Test the build:

    make realclean
    Set up environment variables, c-config.h if required.
    perl Makefile.PL PANELS MENUS FORMS
    make
    perl -Mblib -MCurses -e1

  - make realclean

  - Update HISTORY file with description of new stuff and release date.

  - Update version number in Curses.pm (search for VERSION).

  - Make a tarball with something like this:

    tar --file=/tmp/Curses-1.07.tgz --gzip --create Curses-1.07

  - Upload via pause.perl.org.  Use "upload a file to CPAN" link.
    You have to login to make that link appear.

    It goes into CPAN in the directory belonging to the user who
    uploaded it.  PAUSE gives you various options for uploading, tells
    you how to follow the progress of the uploading and indexing, and
    sends you emails about it.

  - PAUSE will automatically extract the README file from the tarball
    and install it as e.g. Curses-1.07.readme

  - PAUSE will open the tarball automatically and index the packages it finds
    in there by name (Curses::Window, Curses::Screen, etc.).

    It will find and index the package "Gen" and extract its README too.  I'm
    pretty sure this is wrong -- this looks like it's just supposed to be a
    private thing used in the build.  Someday, we should find a way to stop
    this.


For Bryan's test system:

  export CURSES_LDFLAGS="-L/usr/link/ncurses -lncurses -ldl"
  export CURSES_CFLAGS="-I/usr/include/ncurses"


GEN
---

The package is designed to have all the distributed code files
(Curses.pm, CursesFun.c, etc.) generated by the programs in gen/ .
This is supposed to handle the myriad Ncurses functions with less
tedium than manually editing the files.

However, Bryan doesn't know how the Gen stuff works, so he has been
making the small updates necessary directly to the distributed files.
But the changes are modest, so it should be possible some day to
generate new files, diff to see what changed, and put those changes
into the Gen programs.


ppport.h
--------

You generate this by running the function Devel::PPPort::WriteFile().

There shouldn't be any need to generate a new one unless there are
updates to the Devel::PPPort package.

A comment in ppport.h says it was generated by Perl 5.006002.  That's
a lie.
